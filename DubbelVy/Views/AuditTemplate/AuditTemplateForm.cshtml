@model AuditTemplateViewModel
@{
    ViewBag.Title = Model.Id == null ? "New Audit Template" : "Edit Audit Template";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>



@using (Html.BeginForm("Create", "WorkOrder", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="row">
        <div id="form" class="col-md-6">
            <div id="form-audit">
                <div class="form-group">
                    @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Version, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Version, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        @if (Model.Id != null)
        {
            <div id="metadata" class="col-md-2 panel panel-group">
                <dl class="dl-horizontal">
                    <dt>@Html.DisplayNameFor(m => m.Id)</dt>
                    <dd>@Model.Id</dd>
                    <dt>@Html.DisplayNameFor(m => m.CreateDateTime)</dt>
                    <dd>@Model.CreateDateTime.ToString("mm/dd/yyyy hh:mm:ss tt")</dd>
                    <dt>@Html.DisplayNameFor(m => m.CreatedById)</dt>
                    <dd>@Model.CreatedBy.NameFirstMLast</dd>
                    <dt></dt>
                    <dd>@Model.CreatedBy.UserName</dd>
                    <dt>@Html.DisplayNameFor(m => m.DeployDateTime)</dt>
                    @if (Model.DeployDateTime != null)
                    {
                        <dd>@Model.DeployDateTime.Value.ToString("mm/dd/yyyy hh:mm:ss tt")</dd>
                    }
                    <dt>@Html.DisplayNameFor(m => m.DepreciateDateTime)</dt>
                    @if (Model.DeployDateTime != null)
                    {
                        <dd>@Model.DepreciateDateTime.Value.ToString("mm/dd/yyyy hh:mm:ss tt")</dd>
                    }
                </dl>
            </div>
        }
    </div>
    <div class="row">
        <div id="form-section" class="col-lg-12">
            <hr />
            <table id="sections" class="table table-bordered table-responsive">
                <thead>
                    <tr>
                        <th>Description</th>
                        <th>Weight</th>
                        <th>Display Order</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Sections.Count; i++)
                    {
                        Html.EditorFor(m => m.Sections[i]);
                    }
                </tbody>
            </table>
            <a class="add-section btn btn-default">Add Section</a>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Submit" />
        </div>
    </div>

}

@section scripts{
    <script>
        $("#sections").on("click", ".delete-section", function () {
            $(this).closest("tr").hide();
            $(this).prev("input").val("true");
        });

        $(document).on("click", ".add-section", function () {
            var nextIndex = $("table#sections tbody tr").length;
            $.ajax({
                url: "/AuditTemplate/AddSection",
                type: "POST",
                data: { index: nextIndex },
                success: function (results) {
                    $("table#sections tbody").append(results);
                },
                error: function (e) {
                    console.log(e);
                }
            });
        });
    </script>
}


