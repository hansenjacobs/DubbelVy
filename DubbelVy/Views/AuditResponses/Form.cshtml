@model AuditResponseViewModel
@{
    ViewBag.Title = "Audit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Audit</h2>
<div id="audit" class="row">
    <div class="col-md-4">
        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(m => m.Audit.AuditeeId)</dt>
            <dd>@Model.Audit.Auditee.NameFLUser</dd>
            <dt>@Html.DisplayNameFor(m => m.Audit.SupervisorId)</dt>
            <dd>@Model.Audit.Supervisor.NameFLUser</dd>
            <dt>@Html.DisplayNameFor(m => m.Audit.AuditeeId)</dt>
            <dd>@Model.Audit.Auditee.NameFLUser</dd>
            <dt>@Html.DisplayNameFor(m => m.Audit.Score)</dt>
            <dd>@Model.Audit.ScoreDisplay</dd>
        </dl>
    </div>
    <div class="col-md-4">
        <dl class="dl-horizontal">
            <dt>Audit Template</dt>
            <dd>@Model.Audit.AuditTemplate.Title V@(Model.Audit.AuditTemplate.Version)</dd>
            <dt>@Html.DisplayNameFor(m => m.Audit.WorkDateTime)</dt>
            <dd>@Model.Audit.WorkDateTime.ToString("MM/dd/yyyy hh:mm:ss tt")</dd>
            <dt>@Html.DisplayNameFor(m => m.Audit.WorkIdentifier)</dt>
            <dd>@Model.Audit.WorkIdentifier</dd>
        </dl>
    </div>
    <div class="col-md-4">
        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(m => m.Audit.AuditorId)</dt>
            <dd>@Model.Audit.Auditor.NameFLUser</dd>
            <dt>@Html.DisplayNameFor(m => m.Audit.AuditDateTime)</dt>
            <dd>@Model.Audit.AuditDateTime.ToString("MM/dd/yyyy hh:mm:ss tt")</dd>
            <dt>@Html.DisplayNameFor(m => m.Audit.ModifiedById)</dt>
            <dd>@Model.Audit.ModifiedBy.NameFLUser</dd>
            <dt>@Html.DisplayNameFor(m => m.Audit.ModifiedDateTime)</dt>
            <dd>@Model.Audit.ModifiedDateTime.ToString("MM/dd/yyyy hh:mm:ss tt")</dd>
        </dl>
    </div>
</div>
<hr />

@using (Html.BeginForm("Edit", "AuditResponses", FormMethod.Post, new { @class = "form-horizontal", @role = "form" }))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary("", new { @class = "text-danger" })
    
    foreach (var auditSection in Model.Audit.AuditTemplate.Sections.OrderBy(a => a.Order))
    {
        <div class="section" id="@auditSection.Description">
            <h3 style="display:inline">@auditSection.Description</h3>
            <h4 style="display:inline; color:midnightblue; padding-left:15px"> @auditSection.WeightDisplay</h4><br />
            <p></p>
            @foreach (var auditElement in auditSection.Elements)
            {
                <div class="form-group element row" id="@auditElement.Topic">
                    <div class="col-md-4">
                        @Html.HiddenFor(m => m.AuditResponses[auditElement.Id].AuditId)
                        @Html.HiddenFor(m => m.AuditResponses[auditElement.Id].Id)
                        @Html.HiddenFor(m => m.AuditResponses[auditElement.Id].ElementId)
                        @Html.DropDownListFor(m => m.AuditResponses[auditElement.Id].ChoiceId, new SelectList(auditElement.Choices.OrderBy(a => a.Order), "Id", "Text"), new { @class = "form-control" })
                    </div>
                    <div class="col-md-8">
                        <label>@auditElement.Topic: </label>
                        <p style="display:inline">@auditElement.Text</p>
                    </div>
                </div>
            }
        </div>
    }
    <div class="hidden">
        @Html.HiddenFor(m => m.AuditId)
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Save" />
        </div>
    </div>
}

